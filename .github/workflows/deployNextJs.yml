name: Deploy Next.js 
run-name: ${{ github.actor }} is deploying Next.js app ðŸš€
on:
  workflow_call:
jobs:
  build-next:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'
      
      - name: Install dependencies
        run: npm ci  
        working-directory: .
        
      - name: Build Next.js app for production
        run: |
          npm run build
          echo "Build completed successfully"
        working-directory: .
        env:
          NODE_ENV: production 
      
      - name: Upload build artifacts .next
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: |
            .next
          include-hidden-files: true
            
      - name: Upload build artifacts packages
        uses: actions/upload-artifact@v4
        with: 
          name: package-build
          path: |
            ./package.json
            ./package-lock.json
            
      - name: Upload public assets
        uses: actions/upload-artifact@v4
        with:
          name: public-assets
          path: |
            ./public
          if-no-files-found: ignore
            
  deploy-next:
    runs-on: ubuntu-latest
    needs: [build-next]
    
    steps:
      - name: Download build artifacts next
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: .next
          
      - name: Download build artifacts packages
        uses: actions/download-artifact@v4
        with:
          name: package-build
          path: temp-package
          
      - name: Download public assets
        uses: actions/download-artifact@v4
        with:
          name: public-assets
          path: temp-public
        continue-on-error: true 
        
      - name: Prepare deployment directory
        uses: appleboy/ssh-action@master
        with:
          host: portfolio.brianjaen.com
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_PATH }}
            # Backup anterior (opcional)
            [ -d .next ] && mv .next .next.backup.$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
            mkdir -p .next
            mkdir -p public
            mkdir -p logs
            
      # Deploy files to server
      - name: Deploy to production server
        run: |
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/prod_key.pem
            chmod 600 ~/prod_key.pem
            
            # Uplod .next
            scp -r -o StrictHostKeyChecking=no -i "~/prod_key.pem" .next/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}/.next/
            
            # Uplod package files
            scp -r -o StrictHostKeyChecking=no -i "~/prod_key.pem" temp-package/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}/
            
            # Upload public assets
            if [ -d "temp-public" ]; then
              scp -r -o StrictHostKeyChecking=no -i "~/prod_key.pem" temp-public/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}/public/ 2>/dev/null || true
            fi
            
            # Limpiar archivo de clave
            rm -f ~/prod_key.pem
      
      # Install dependencies and restart service
      - name: Install dependencies and restart production service
        uses: appleboy/ssh-action@master
        with:
          host: portfolio.brianjaen.com
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_PATH }}
            
            npm ci --only=production --silent
            
            # Restart with PM2
            pm2 reload ecosystem.config.js --env production --silent || pm2 start ecosystem.config.js --env production --silent
            pm2 save --silent
            
            echo "Deployment completed successfully!"
            pm2 status

            find . -name ".next.backup.*" -mtime +7 -exec rm -rf {} \; 2>/dev/null || true
      - run: | 
          echo "âœ… Production deployment completed successfully! Status: ${{ job.status }}"